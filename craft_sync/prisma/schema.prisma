generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}



model Project {
  id          Int        @id @default(autoincrement())
  name        String
  description String?    // Optional description field for projects
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  tasks       Task[]
  milestones  Milestone[]  
  clients     User[]     @relation("ProjectClient")
  teamMembers User[]     @relation("ProjectTeam")
  invites     Invite[]   // Relation to invites for this project
}

model Task {
  id        Int     @id @default(autoincrement())
  name      String
  projectId Int
  project   Project @relation(fields: [projectId], references: [id])
}

model Milestone {
  id        Int      @id @default(autoincrement())
  name      String
  dueDate   DateTime
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
}



model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  name             String?
  password         String
  role             Role      @default(CLIENT)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  projectsAsClient Project[] @relation("ProjectClient")
  projectsAsTeam   Project[] @relation("ProjectTeam")
}

model Invite {
  id        Int     @id @default(autoincrement())
  phone     String
  role      Role
  token     String  @unique
  project   Project @relation(fields: [projectId], references: [id])  // Link invite to a project
  projectId Int     // Foreign key for the associated project
}



enum Role {
  ADMIN
  TEAM
  CLIENT
}
